{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggle","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","settext","_useState3","_useState4","fWord","findWord","_useState5","_useState6","rWord","replaceWord","div","style","color","textheading","value","onChange","event","target","backgroundColor","rows","text2","toUpperCase","toLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","alert","console","log","newText","replaceAll","split","length","Alert","class","role","word","lowercase","charAt","slice","capitalize","message","defaultProps","abouttext","App","setmode","setAlert","showAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.467765ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (<>\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode}  bg-${props.mode} `} >\r\n      <div className=\"container-fluid\" >\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\"  href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a> */}\r\n            </li>\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n          <div className= {`form-check form-switch text-${props.mode===\"dark\"?'light':\"dark\"}`}>\r\n            <input   className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\"  id=\"flexSwitchCheckChecked\"   />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  abouttext: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  abouttext: 'About text here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, settext] = useState(\"Enter Text here \");\r\n\r\n    //\r\n\r\n\r\n    const [fWord, findWord] = useState(\"\");\r\n    const [rWord, replaceWord] = useState(\"\");\r\n\r\n    const handlefindChange = (event) => {\r\n        findWord(event.target.value);\r\n    };\r\n    const handleReplaceChange = (event) => {\r\n        console.log(replaceWord(event.target.value));\r\n    };\r\n    const handleReplaceClick = () => {\r\n        let newText = text.replaceAll(fWord, rWord);\r\n        settext(newText);\r\n    };\r\n\r\n\r\n    //\r\n    const handleUpClick = () => {\r\n        // console.log(\"Upper Case was Clicked : \" + text)I\r\n        let text2 = text.toUpperCase();\r\n        settext(text2)\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        var copyText = document.getElementById(\"mybox\");\r\n\r\n        // Select the text field\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); // For mobile devices\r\n\r\n        // Copy the text inside the text field\r\n        navigator.clipboard.writeText(copyText.value);\r\n\r\n        // Alert the copied text\r\n        alert(\"Copied the text: \" + copyText.value);\r\n    }\r\n    const handleLpClick = () => {\r\n        // console.log(\"Upper Case was Clicked : \" + text)I\r\n        let text2 = text.toLowerCase();\r\n        settext(text2)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(event.target.value )\r\n        settext(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div div className='container' style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h1>{props.textheading}</h1>\r\n                <div className=\"mb-3\">\r\n\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === \"dark\" ? \"black\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n                        id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className='btn btn-primary mx-2' onClick={handleUpClick} >Convert to UpperCase</button>\r\n                <button className='btn btn-primary  mx-2' onClick={handleLpClick} >Convert to LowerCase</button>\r\n                <button className='btn btn-primary  mx-2' onClick={handleCopy} >Copy Content</button>\r\n            </div>\r\n\r\n            <div className='container'>\r\n                <textarea className=\"form-control my-1\" value={fWord} onChange={handlefindChange} id=\"\" rows=\"1\" style={{ backgroundColor: props.mode === \"dark\" ? \"black\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}></textarea>\r\n                <textarea className=\"form-control my-1 \" value={rWord} onChange={handleReplaceChange} id=\"\" rows=\"1\" style={{ backgroundColor: props.mode === \"dark\" ? \"black\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}></textarea>\r\n\r\n                <button className='btn btn-primary  mx-2' onClick={handleReplaceClick} >Replace It </button>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='container' style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lowercase = word.toLowerCase();\r\n        return lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\r\n    }\r\n    return (\r\n\r\n\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n\n//   Route,\n//   Routes,\n//   BrowserRouter\n// } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggle = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      showAlert(\"Enable Dark mode is Done\", \"success\");\n      document.body.style.backgroundColor = \"black\";\n    }\n    else {\n      setmode('light');\n      showAlert(\"Enable light mode is Done\", \"success\");\n      document.body.style.backgroundColor = \"white\";\n\n\n    }\n\n  }\n  return (\n    <>\n\n\n      <Navbar title=\"TitleUtile\" abouttext=\"About\" mode={mode} toggle={toggle} />\n      <Alert alert={alert} />\n      <div className='container my-3'>\n        <TextForm textheading=\"Enter The Text to analyze below  \" mode={mode} />\n       </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}